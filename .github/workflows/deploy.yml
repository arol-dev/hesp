name: hesp deployment
description: Deploy hesp to Vercel

on:
  pull_request_target:
    types: [closed]

jobs:
  vercel_preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - name: Check if PR was merged
        id: check
        run: |
          MERGED=$(git log --pretty=format:"%H" | grep ${{ github.event.pull_request.merge_commit_sha }})
          echo "MERGED=$MERGED"
          if [[ -z "$MERGED" ]]; then
            echo "Not a merged PR, skipping steps..."
            echo "::set-output name=skipped::true"
          else
            echo "Merged PR, running steps..."
            echo "::set-output name=skipped::false"
          fi

      - name: Install Vercel CLI
        run: npm i -g vercel

      - name: Install Prisma CLI
        run: npm i -g prisma

      - name: Prisma generate and migrate
        working-directory: apps/hesp
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          prisma generate
          prisma migrate deploy

      - name: Deploy to Vercel
        working-directory: apps/hesp
        env:
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_BUCKET_NAME: ${{ secrets.SUPABASE_BUCKET_NAME }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel --token $VERCEL_TOKEN --yes

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get deployment preview URL
        id: deployment
        working-directory: apps/hesp
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          VERCEL_DEPLOYMENT=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" "https://api.vercel.com/v5/now/deployments?teamId=$(vercel --token $VERCEL_TOKEN --yes whoami)" | jq -r 'first(.deployments[] | select(.state == "READY")) | .url')
          echo "::set-output name=url::https://$VERCEL_DEPLOYMENT"

      - name: Add comment with preview URL
        uses: actions/github-script@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = '${{ steps.deployment.outputs.url }}'
            const comment = `ðŸš€ Deployment preview: ${url}`
            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
